MathJax.Extension["TeX/unicode"]={version:"2.7.9",unicode:{},config:MathJax.Hub.CombineConfig("TeX.unicode",{fonts:"STIXGeneral,'Arial Unicode MS'"})},MathJax.Hub.Register.StartupHook("TeX Jax Ready",function(){var i=MathJax.InputJax.TeX,n=MathJax.ElementJax.mml,a=MathJax.Extension["TeX/unicode"].unicode;i.Definitions.Add({macros:{unicode:"Unicode"}},null,!0),i.Parse.Augment({Unicode:function(t){var e=this.GetBrackets(t),r;e&&(e.replace(/ /g,"").match(/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/)?(e=e.replace(/ /g,"").split(/,/),r=this.GetBrackets(t)):(r=e,e=null));var c=this.trimSpaces(this.GetArgument(t)).replace(/^0x/,"x");c.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)||i.Error(["BadUnicode","Argument to \\unicode must be a number"]);var o=parseInt(c.match(/^x/)?"0"+c:c);a[o]?r||(r=a[o][2]):a[o]=[800,200,r,o],e&&(a[o][0]=Math.floor(e[0]*1e3),a[o][1]=Math.floor(e[1]*1e3));var d=this.stack.env.font,u={};r?(a[o][2]=u.fontfamily=r.replace(/"/g,"'"),d&&(d.match(/bold/)&&(u.fontweight="bold"),d.match(/italic|-mathit/)&&(u.fontstyle="italic"))):d&&(u.mathvariant=d),u.unicode=[].concat(a[o]),this.Push(n.mtext(n.entity("#"+c)).With(u))}}),MathJax.Hub.Startup.signal.Post("TeX unicode Ready")}),MathJax.Hub.Register.StartupHook("HTML-CSS Jax Ready",function(){var i=MathJax.ElementJax.mml,n=MathJax.Extension["TeX/unicode"].config.fonts,a=i.mbase.prototype.HTMLgetVariant;i.mbase.Augment({HTMLgetVariant:function(){var t=a.apply(this,arguments);if(t.unicode&&(delete t.unicode,delete t.FONTS),!this.unicode)return t;t.unicode=!0,t.defaultFont||(t=MathJax.Hub.Insert({},t),t.defaultFont={family:n});var e=this.unicode[2];return e?e+=","+n:e=n,t.defaultFont[this.unicode[3]]=[this.unicode[0],this.unicode[1],500,0,500,{isUnknown:!0,isUnicode:!0,font:e}],t}})}),MathJax.Hub.Register.StartupHook("SVG Jax Ready",function(){var i=MathJax.ElementJax.mml,n=MathJax.Extension["TeX/unicode"].config.fonts,a=i.mbase.prototype.SVGgetVariant;i.mbase.Augment({SVGgetVariant:function(){var t=a.call(this);return t.unicode&&(delete t.unicode,delete t.FONTS),this.unicode&&(t.unicode=!0,t.forceFamily||(t=MathJax.Hub.Insert({},t)),t.defaultFamily=n,t.noRemap=!0,t.h=this.unicode[0],t.d=this.unicode[1]),t}})}),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/unicode.js");
