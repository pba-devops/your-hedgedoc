MathJax.Extension["TeX/extpfeil"]={version:"2.7.9"},MathJax.Hub.Register.StartupHook("TeX Jax Ready",function(){var r=MathJax.InputJax.TeX,x=r.Definitions;x.Add({macros:{xtwoheadrightarrow:["Extension","AMSmath"],xtwoheadleftarrow:["Extension","AMSmath"],xmapsto:["Extension","AMSmath"],xlongequal:["Extension","AMSmath"],xtofrom:["Extension","AMSmath"],Newextarrow:["Extension","AMSmath"]}},null,!0),MathJax.Hub.Register.StartupHook("TeX AMSmath Ready",function(){MathJax.Hub.Insert(x,{macros:{xtwoheadrightarrow:["xArrow",8608,12,16],xtwoheadleftarrow:["xArrow",8606,17,13],xmapsto:["xArrow",8614,6,7],xlongequal:["xArrow",61,7,7],xtofrom:["xArrow",8644,12,12],Newextarrow:"NewExtArrow"}})}),r.Parse.Augment({NewExtArrow:function(t){var a=this.GetArgument(t),e=this.GetArgument(t),o=this.GetArgument(t);a.match(/^\\([a-z]+|.)$/i)||r.Error(["NewextarrowArg1","First argument to %1 must be a control sequence name",t]),e.match(/^(\d+),(\d+)$/)||r.Error(["NewextarrowArg2","Second argument to %1 must be two integers separated by a comma",t]),o.match(/^(\d+|0x[0-9A-F]+)$/i)||r.Error(["NewextarrowArg3","Third argument to %1 must be a unicode character number",t]),a=a.substr(1),e=e.split(","),o=parseInt(o),this.setDef(a,["xArrow",o,parseInt(e[0]),parseInt(e[1])])}}),MathJax.Hub.Startup.signal.Post("TeX extpfeil Ready")}),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/extpfeil.js");
