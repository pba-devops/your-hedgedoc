module.exports=function(e){function t(a){if(s[a])return s[a].exports;var n=s[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,t),n.l=!0,n.exports}var s={};return t.m=e,t.c=s,t.p="",t(t.s=5)}([function(e,t){e.exports=require("babel-runtime/core-js/json/stringify")},function(e,t){e.exports=require("babel-runtime/helpers/classCallCheck")},function(e,t){e.exports=require("babel-runtime/helpers/createClass")},function(e,t,s){"use strict";var a=s(0),n=a&&a.__esModule?function(){return a["default"]}:function(){return a};Object.defineProperty(n,"a",{get:n});var i=s(1),o=i&&i.__esModule?function(){return i["default"]}:function(){return i};Object.defineProperty(o,"a",{get:o});var p=s(2),l=p&&p.__esModule?function(){return p["default"]}:function(){return p};Object.defineProperty(l,"a",{get:l});var d=s(7),c=d&&d.__esModule?function(){return d["default"]}:function(){return d};Object.defineProperty(c,"a",{get:c});var u="x-version-id",h="x-cluster-id",r="token",g="BEARER",f="Authorization",y=function(){function e(){o.a.bind()(this,e),this.teamId="",this.serverVersion="",this.clusterId="",this.logToConsole=!1,this.useToken=!1,this.token="",this.url="",this.urlVersion="/api/v3",this.defaultHeaders={"X-Requested-With":"XMLHttpRequest"},this.translations={connectionError:"There appears to be a problem with your internet connection.",unknownError:"We received an unexpected status code from the server."}}return l.a.bind()(e,[{key:"setUrl",value:function(e){this.url=e}},{key:"setAcceptLanguage",value:function(e){this.defaultHeaders["Accept-Language"]=e}},{key:"setTeamId",value:function(e){this.teamId=e}},{key:"getTeamId",value:function(){return this.teamId||console.error("You are trying to use a route that requires a team_id, but you have not called setTeamId() in client.jsx"),this.teamId}},{key:"getServerVersion",value:function(){return this.serverVersion}},{key:"getBaseRoute",value:function(){return""+this.url+this.urlVersion}},{key:"getAdminRoute",value:function(){return""+this.url+this.urlVersion+"/admin"}},{key:"getGeneralRoute",value:function(){return""+this.url+this.urlVersion+"/general"}},{key:"getLicenseRoute",value:function(){return""+this.url+this.urlVersion+"/license"}},{key:"getTeamsRoute",value:function(){return""+this.url+this.urlVersion+"/teams"}},{key:"getTeamNeededRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()}},{key:"getChannelsRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels"}},{key:"getChannelNameRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/name/"+e}},{key:"getChannelNeededRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/"+e}},{key:"getCommandsRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/commands"}},{key:"getEmojiRoute",value:function(){return""+this.url+this.urlVersion+"/emoji"}},{key:"getHooksRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/hooks"}},{key:"getPostsRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/"+e+"/posts"}},{key:"getUsersRoute",value:function(){return""+this.url+this.urlVersion+"/users"}},{key:"getFilesRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/files"}},{key:"getOAuthRoute",value:function(){return""+this.url+this.urlVersion+"/oauth"}},{key:"getUserNeededRoute",value:function(e){return""+this.url+this.urlVersion+"/users/"+e}},{key:"setTranslations",value:function(e){this.translations=e}},{key:"enableLogErrorsToConsole",value:function(e){this.logToConsole=e}},{key:"useHeaderToken",value:function(){this.useToken=!0,""!==this.token&&(this.defaultHeaders[f]=g+" "+this.token)}},{key:"track",value:function(e,t,s,a,n){}},{key:"trackPage",value:function(){}},{key:"handleError",value:function(e,t){}},{key:"handleResponse",value:function(e,t,s,a,n){if(n&&n.header&&(this.serverVersion=n.header[u],n.header[u]&&(this.serverVersion=n.header[u]),this.clusterId=n.header[h],n.header[h]&&(this.clusterId=n.header[h])),a){var i=null;n&&n.body&&n.body.id&&(i=n.body);var o="";if(i?o="method="+e+" msg="+i.message+" detail="+i.detailed_error+" rid="+i.request_id:(o="method="+e+" status="+a.status+" statusCode="+a.statusCode+" err="+a,i=0!==a.status&&a.status?{message:this.translations.unknownError+" ("+a.status+")"}:{message:this.translations.connectionError}),this.logToConsole&&(console.error(o),console.error(i)),this.track("api","api_weberror",e,"message",o),this.handleError(a,n),s)return void s(i,a,n)}t&&t(n.body,n)}},{key:"getClientConfig",value:function(e,t){return c.a.get(this.getGeneralRoute()+"/client_props").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClientConfig",e,t))}},{key:"getPing",value:function(e,t){return c.a.get(this.getGeneralRoute()+"/ping").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPing",e,t))}},{key:"logClientError",value:function(e){var t={};t.level="ERROR",t.message=e,c.a.post(this.getGeneralRoute()+"/log_client").set(this.defaultHeaders).type("application/json").accept("application/json").send(t).end(this.handleResponse.bind(this,"logClientError",null,null))}},{key:"reloadConfig",value:function(e,t){return c.a.get(this.getAdminRoute()+"/reload_config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"reloadConfig",e,t))}},{key:"recycleDatabaseConnection",value:function(e,t){return c.a.get(this.getAdminRoute()+"/recycle_db_conn").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"recycleDatabaseConnection",e,t))}},{key:"getTranslations",value:function(e,t,s){return c.a.get(e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTranslations",t,s))}},{key:"getComplianceReports",value:function(e,t){return c.a.get(this.getAdminRoute()+"/compliance_reports").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getComplianceReports",e,t))}},{key:"uploadBrandImage",value:function(e,t,s){c.a.post(this.getAdminRoute()+"/upload_brand_image").set(this.defaultHeaders).accept("application/json").attach("image",e,e.name).end(this.handleResponse.bind(this,"uploadBrandImage",t,s))}},{key:"saveComplianceReports",value:function(e,t,s){return c.a.post(this.getAdminRoute()+"/save_compliance_report").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"saveComplianceReports",t,s))}},{key:"getLogs",value:function(e,t){return c.a.get(this.getAdminRoute()+"/logs").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getLogs",e,t))}},{key:"getClusterStatus",value:function(e,t){return c.a.get(this.getAdminRoute()+"/cluster_status").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClusterStatus",e,t))}},{key:"getServerAudits",value:function(e,t){return c.a.get(this.getAdminRoute()+"/audits").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getServerAudits",e,t))}},{key:"getConfig",value:function(e,t){return c.a.get(this.getAdminRoute()+"/config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getConfig",e,t))}},{key:"getAnalytics",value:function(e,t,s,a){var n=this.getAdminRoute()+"/analytics/";return n+=null==t?e:t+"/"+e,c.a.get(n).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAnalytics",s,a))}},{key:"getTeamAnalytics",value:function(e,t,s,a){return c.a.get(this.getAdminRoute()+"/analytics/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamAnalytics",s,a))}},{key:"saveConfig",value:function(e,t,s){c.a.post(this.getAdminRoute()+"/save_config").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"saveConfig",t,s))}},{key:"testEmail",value:function(e,t,s){c.a.post(this.getAdminRoute()+"/test_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"testEmail",t,s))}},{key:"getClientLicenceConfig",value:function(e,t){c.a.get(this.getLicenseRoute()+"/client_config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClientLicenceConfig",e,t))}},{key:"removeLicenseFile",value:function(e,t){c.a.post(this.getLicenseRoute()+"/remove").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"removeLicenseFile",e,t))}},{key:"uploadLicenseFile",value:function(e,t,s){c.a.post(this.getLicenseRoute()+"/add").set(this.defaultHeaders).accept("application/json").attach("license",e,e.name).end(this.handleResponse.bind(this,"uploadLicenseFile",t,s)),this.track("api","api_license_upload")}},{key:"importSlack",value:function(e,t,s){c.a.post(this.getTeamNeededRoute()+"/import_team").set(this.defaultHeaders).accept("application/octet-stream").send(e).end(this.handleResponse.bind(this,"importSlack",t,s))}},{key:"exportTeam",value:function(e,t){c.a.get(this.getTeamsRoute()+"/export_team").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"exportTeam",e,t))}},{key:"signupTeam",value:function(e,t,s){c.a.post(this.getTeamsRoute()+"/signup").set(this.defaultHeaders).type("application/json").accept("application/json").send({email:e}).end(this.handleResponse.bind(this,"signupTeam",t,s)),this.track("api","api_teams_signup")}},{key:"adminResetMfa",value:function(e,t,s){var a={};a.user_id=e,c.a.post(this.getAdminRoute()+"/reset_mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"adminResetMfa",t,s))}},{key:"adminResetPassword",value:function(e,t,s,a){var n={};n.new_password=t,n.user_id=e,c.a.post(this.getAdminRoute()+"/reset_password").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"adminResetPassword",s,a)),this.track("api","api_admin_reset_password")}},{key:"ldapSyncNow",value:function(e,t){c.a.post(this.getAdminRoute()+"/ldap_sync_now").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"ldapSyncNow",e,t))}},{key:"ldapTest",value:function(e,t){c.a.post(this.getAdminRoute()+"/ldap_test").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"ldap_test",e,t))}},{key:"createTeamFromSignup",value:function(e,t,s){c.a.post(this.getTeamsRoute()+"/create_from_signup").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createTeamFromSignup",t,s))}},{key:"findTeamByName",value:function(e,t,s){c.a.post(this.getTeamsRoute()+"/find_team_by_name").set(this.defaultHeaders).type("application/json").accept("application/json").send({name:e}).end(this.handleResponse.bind(this,"findTeamByName",t,s))}},{key:"createTeam",value:function(e,t,s){c.a.post(this.getTeamsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createTeam",t,s)),this.track("api","api_users_create","","email",e.name)}},{key:"updateTeam",value:function(e,t,s){c.a.post(this.getTeamNeededRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateTeam",t,s)),this.track("api","api_teams_update_name")}},{key:"getAllTeams",value:function(e,t){c.a.get(this.getTeamsRoute()+"/all").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllTeams",e,t))}},{key:"getAllTeamListings",value:function(e,t){c.a.get(this.getTeamsRoute()+"/all_team_listings").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllTeamListings",e,t))}},{key:"getMyTeam",value:function(e,t){c.a.get(this.getTeamNeededRoute()+"/me").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyTeam",e,t))}},{key:"getTeamMembers",value:function(e,t,s){c.a.get(this.getTeamsRoute()+"/members/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamMembers",t,s))}},{key:"inviteMembers",value:function(e,t,s){c.a.post(this.getTeamNeededRoute()+"/invite_members").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"inviteMembers",t,s)),this.track("api","api_teams_invite_members")}},{key:"addUserToTeam",value:function(e,t,s,a){var n=e;""===n&&(n=this.getTeamId()),c.a.post(this.getTeamsRoute()+"/"+n+"/add_user_to_team").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"addUserToTeam",s,a)),this.track("api","api_teams_invite_members")}},{key:"addUserToTeamFromInvite",value:function(e,t,s,a,n){c.a.post(this.getTeamsRoute()+"/add_user_to_team_from_invite").set(this.defaultHeaders).type("application/json").accept("application/json").send({hash:t,data:e,invite_id:s}).end(this.handleResponse.bind(this,"addUserToTeam",a,n)),this.track("api","api_teams_invite_members")}},{key:"removeUserFromTeam",value:function(e,t,s,a){var n=e;""===n&&(n=this.getTeamId()),c.a.post(this.getTeamsRoute()+"/"+n+"/remove_user_from_team").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"removeUserFromTeam",s,a)),this.track("api","api_teams_remove_members")}},{key:"getInviteInfo",value:function(e,t,s){c.a.post(this.getTeamsRoute()+"/get_invite_info").set(this.defaultHeaders).type("application/json").accept("application/json").send({invite_id:e}).end(this.handleResponse.bind(this,"getInviteInfo",t,s))}},{key:"createUser",value:function(e,t,s){this.createUserWithInvite(e,null,null,null,t,s)}},{key:"createUserWithInvite",value:function(e,t,s,a,n,i){var o=this.getUsersRoute()+"/create";o+="?d="+encodeURIComponent(t),s&&(o+="&h="+encodeURIComponent(s)),a&&(o+="&iid="+encodeURIComponent(a)),c.a.post(o).set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createUser",n,i)),this.track("api","api_users_create","","email",e.email)}},{key:"updateUser",value:function(e,t,s,a){c.a.post(this.getUsersRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateUser",s,a)),t?this.track("api","api_users_update_"+t):this.track("api","api_users_update")}},{key:"updatePassword",value:function(e,t,s,a,n){var i={};i.user_id=e,i.current_password=t,i.new_password=s,c.a.post(this.getUsersRoute()+"/newpassword").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"updatePassword",a,n)),this.track("api","api_users_newpassword")}},{key:"updateUserNotifyProps",value:function(e,t,s){c.a.post(this.getUsersRoute()+"/update_notify").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateUserNotifyProps",t,s)),this.track("api","api_users_update_notification_settings")}},{key:"updateRoles",value:function(e,t,s,a,n){var i={team_id:e,user_id:t,new_roles:s};c.a.post(this.getUsersRoute()+"/update_roles").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"updateRoles",a,n)),this.track("api","api_users_update_roles")}},{key:"updateActive",value:function(e,t,s,a){var n={};n.user_id=e,n.active=""+t,c.a.post(this.getUsersRoute()+"/update_active").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"updateActive",s,a)),this.track("api","api_users_update_roles")}},{key:"sendPasswordReset",value:function(e,t,s){var a={};a.email=e,c.a.post(this.getUsersRoute()+"/send_password_reset").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"sendPasswordReset",t,s)),this.track("api","api_users_send_password_reset")}},{key:"resetPassword",value:function(e,t,s,a){var n={};n.new_password=t,n.code=e,c.a.post(this.getUsersRoute()+"/reset_password").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"resetPassword",s,a)),this.track("api","api_users_reset_password")}},{key:"emailToOAuth",value:function(e,t,s,a,n){var i={};i.password=t,i.email=e,i.service=s,c.a.post(this.getUsersRoute()+"/claim/email_to_oauth").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"emailToOAuth",a,n)),this.track("api","api_users_email_to_oauth")}},{key:"oauthToEmail",value:function(e,t,s,a){var n={};n.password=t,n.email=e,c.a.post(this.getUsersRoute()+"/claim/oauth_to_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"oauthToEmail",s,a)),this.track("api","api_users_oauth_to_email")}},{key:"emailToLdap",value:function(e,t,s,a,n,i){var o={};o.email_password=t,o.email=e,o.ldap_id=s,o.ldap_password=a,c.a.post(this.getUsersRoute()+"/claim/email_to_ldap").set(this.defaultHeaders).type("application/json").accept("application/json").send(o).end(this.handleResponse.bind(this,"emailToLdap",n,i)),this.track("api","api_users_email_to_ldap")}},{key:"ldapToEmail",value:function(e,t,s,a,n){var i={};i.email=e,i.ldap_password=s,i.email_password=t,c.a.post(this.getUsersRoute()+"/claim/ldap_to_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"ldapToEmail",a,n)),this.track("api","api_users_oauth_to_email")}},{key:"getInitialLoad",value:function(e,t){c.a.get(this.getUsersRoute()+"/initial_load").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getInitialLoad",e,t))}},{key:"getMe",value:function(e,t){c.a.get(this.getUsersRoute()+"/me").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMe",e,t))}},{key:"login",value:function(e,t,s,a,n){this.doLogin({login_id:e,password:t,token:s},a,n),this.track("api","api_users_login","","login_id",e)}},{key:"loginById",value:function(e,t,s,a,n){this.doLogin({id:e,password:t,token:s},a,n),this.track("api","api_users_login","","id",e)}},{key:"loginByLdap",value:function(e,t,s,a,n){this.doLogin({login_id:e,password:t,token:s,ldap_only:"true"},a,n),this.track("api","api_users_login","","login_id",e)}},{key:"doLogin",value:function(e,t,s){var a=this;c.a.post(this.getUsersRoute()+"/login").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"login",function(e,s){s&&s.header&&(a.token=s.header[r],a.useToken&&(a.defaultHeaders[f]=g+" "+a.token)),t&&t(e,s)},s))}},{key:"logout",value:function(e,t){c.a.post(this.getUsersRoute()+"/logout").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"logout",e,t)),this.track("api","api_users_logout")}},{key:"checkMfa",value:function(e,t,s){var a={login_id:e};c.a.post(this.getUsersRoute()+"/mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"checkMfa",t,s)),this.track("api","api_users_oauth_to_email")}},{key:"revokeSession",value:function(e,t,s){c.a.post(this.getUsersRoute()+"/revoke_session").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"revokeSession",t,s))}},{key:"getSessions",value:function(e,t,s){c.a.get(this.getUserNeededRoute(e)+"/sessions").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getSessions",t,s))}},{key:"getAudits",value:function(e,t,s){c.a.get(this.getUserNeededRoute(e)+"/audits").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAudits",t,s))}},{key:"getRecentlyActiveUsers",value:function(e,t,s){c.a.get(this.getAdminRoute()+"/recently_active_users/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getRecentlyActiveUsers",t,s))}},{key:"getDirectProfiles",value:function(e,t){c.a.get(this.getUsersRoute()+"/direct_profiles").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getDirectProfiles",e,t))}},{key:"getProfiles",value:function(e,t){c.a.get(this.getUsersRoute()+"/profiles/"+this.getTeamId()).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfiles",e,t))}},{key:"getProfilesForTeam",value:function(e,t,s){c.a.get(this.getUsersRoute()+"/profiles/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfilesForTeam",t,s))}},{key:"getProfilesForDirectMessageList",value:function(e,t){c.a.get(this.getUsersRoute()+"/profiles_for_dm_list/"+this.getTeamId()).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfilesForDirectMessageList",e,t))}},{key:"getStatuses",value:function(e,t){c.a.get(this.getUsersRoute()+"/status").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getStatuses",e,t))}},{key:"setActiveChannel",value:function(e,t,s){c.a.post(this.getUsersRoute()+"/status/set_active_channel").set(this.defaultHeaders).type("application/json").accept("application/json").send({channel_id:e}).end(this.handleResponse.bind(this,"setActiveChannel",t,s))}},{key:"verifyEmail",value:function(e,t,s,a){c.a.post(this.getUsersRoute()+"/verify_email").set(this.defaultHeaders).type("application/json").accept("application/json").send({uid:e,hid:t}).end(this.handleResponse.bind(this,"verifyEmail",s,a))}},{key:"resendVerification",value:function(e,t,s){c.a.post(this.getUsersRoute()+"/resend_verification").set(this.defaultHeaders).type("application/json").accept("application/json").send({email:e}).end(this.handleResponse.bind(this,"resendVerification",t,s))}},{key:"updateMfa",value:function(e,t,s,a){var n={};n.activate=t,n.token=e,c.a.post(this.getUsersRoute()+"/update_mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"updateMfa",s,a))}},{key:"uploadProfileImage",value:function(e,t,s){c.a.post(this.getUsersRoute()+"/newimage").set(this.defaultHeaders).attach("image",e,e.name).accept("application/json").end(this.handleResponse.bind(this,"uploadProfileImage",t,s)),this.track("api","api_users_update_profile_picture")}},{key:"createChannel",value:function(e,t,s){c.a.post(this.getChannelsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createChannel",t,s)),this.track("api","api_channels_create",e.type,"name",e.name)}},{key:"createDirectChannel",value:function(e,t,s){c.a.post(this.getChannelsRoute()+"/create_direct").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:e}).end(this.handleResponse.bind(this,"createDirectChannel",t,s))}},{key:"updateChannel",value:function(e,t,s){c.a.post(this.getChannelsRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateChannel",t,s)),this.track("api","api_channels_update")}},{key:"updateChannelHeader",value:function(e,t,s,a){var n={channel_id:e,channel_header:t};c.a.post(this.getChannelsRoute()+"/update_header").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"updateChannel",s,a)),this.track("api","api_channels_header")}},{key:"updateChannelPurpose",value:function(e,t,s,a){var n={channel_id:e,channel_purpose:t};c.a.post(this.getChannelsRoute()+"/update_purpose").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"updateChannelPurpose",s,a)),this.track("api","api_channels_purpose")}},{key:"updateChannelNotifyProps",value:function(e,t,s){c.a.post(this.getChannelsRoute()+"/update_notify_props").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateChannelNotifyProps",t,s))}},{key:"leaveChannel",value:function(e,t,s){c.a.post(this.getChannelNeededRoute(e)+"/leave").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"leaveChannel",t,s)),this.track("api","api_channels_leave")}},{key:"joinChannel",value:function(e,t,s){c.a.post(this.getChannelNeededRoute(e)+"/join").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"joinChannel",t,s)),this.track("api","api_channels_join")}},{key:"joinChannelByName",value:function(e,t,s){c.a.post(this.getChannelNameRoute(e)+"/join").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"joinChannelByName",t,s)),this.track("api","api_channels_join_name")}},{key:"deleteChannel",value:function(e,t,s){c.a.post(this.getChannelNeededRoute(e)+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"deleteChannel",t,s)),this.track("api","api_channels_delete")}},{key:"updateLastViewedAt",value:function(e,t,s,a){c.a.post(this.getChannelNeededRoute(e)+"/update_last_viewed_at").set(this.defaultHeaders).type("application/json").accept("application/json").send({active:t}).end(this.handleResponse.bind(this,"updateLastViewedAt",s,a))}},{key:"setLastViewedAt",value:function(e,t,s,a){c.a.post(this.getChannelNeededRoute(e)+"/set_last_viewed_at").set(this.defaultHeaders).type("application/json").accept("application/json").send({last_viewed_at:t}).end(this.handleResponse.bind(this,"setLastViewedAt",s,a))}},{key:"getChannels",value:function(e,t){c.a.get(this.getChannelsRoute()+"/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannels",e,t))}},{key:"getChannel",value:function(e,t,s){c.a.get(this.getChannelNeededRoute(e)+"/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannel",t,s)),this.track("api","api_channel_get")}},{key:"getMoreChannels",value:function(e,t){c.a.get(this.getChannelsRoute()+"/more").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMoreChannels",e,t))}},{key:"getChannelCounts",value:function(e,t){c.a.get(this.getChannelsRoute()+"/counts").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelCounts",e,t))}},{key:"getChannelExtraInfo",value:function(e,t,s,a){var n=this.getChannelNeededRoute(e)+"/extra_info";t&&(n+="/"+t),c.a.get(n).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelExtraInfo",s,a))}},{key:"addChannelMember",value:function(e,t,s,a){c.a.post(this.getChannelNeededRoute(e)+"/add").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"addChannelMember",s,a)),this.track("api","api_channels_add_member")}},{key:"removeChannelMember",value:function(e,t,s,a){c.a.post(this.getChannelNeededRoute(e)+"/remove").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"removeChannelMember",s,a)),this.track("api","api_channels_remove_member")}},{key:"listCommands",value:function(e,t){c.a.get(this.getCommandsRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listCommands",e,t))}},{key:"executeCommand",value:function(e,t,s,a,n){c.a.post(this.getCommandsRoute()+"/execute").set(this.defaultHeaders).type("application/json").accept("application/json").send({channelId:e,command:t,suggest:""+s}).end(this.handleResponse.bind(this,"executeCommand",a,n)),this.track("api","api_integrations_used")}},{key:"addCommand",value:function(e,t,s){c.a.post(this.getCommandsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addCommand",t,s)),this.track("api","api_integrations_created")}},{key:"deleteCommand",value:function(e,t,s){c.a.post(this.getCommandsRoute()+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteCommand",t,s)),this.track("api","api_integrations_deleted")}},{key:"listTeamCommands",value:function(e,t){c.a.get(this.getCommandsRoute()+"/list_team_commands").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listTeamCommands",e,t))}},{key:"regenCommandToken",value:function(e,t,s){c.a.post(this.getCommandsRoute()+"/regen_token").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"regenCommandToken",t,s))}},{key:"createPost",value:function(e,t,s){c.a.post(this.getPostsRoute(e.channel_id)+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createPost",t,s)),this.track("api","api_posts_create",e.channel_id,"length",e.message.length),e.message.match(/\s#./)&&this.track("api","api_posts_hashtag"),e.message.match(/\s@./)&&this.track("api","api_posts_mentions")}},{key:"getPermalinkTmp",value:function(e,t,s){c.a.get(this.getTeamNeededRoute()+"/pltmp/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPermalinkTmp",t,s))}},{key:"getPostById",value:function(e,t,s){c.a.get(this.getTeamNeededRoute()+"/posts/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostById",t,s))}},{key:"getPost",value:function(e,t,s,a){c.a.get(this.getChannelNeededRoute(e)+"/posts/"+t+"/get").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPost",s,a))}},{key:"updatePost",value:function(e,t,s){c.a.post(this.getPostsRoute(e.channel_id)+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updatePost",t,s)),this.track("api","api_posts_update")}},{key:"deletePost",value:function(e,t,s,a){c.a.post(this.getChannelNeededRoute(e)+"/posts/"+t+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"deletePost",s,a)),
this.track("api","api_posts_delete")}},{key:"search",value:function(e,t,s,a){var n={};n.terms=e,n.is_or_search=t,c.a.post(this.getTeamNeededRoute()+"/posts/search").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"search",s,a)),this.track("api","api_posts_search")}},{key:"getPostsPage",value:function(e,t,s,a,n){c.a.get(this.getPostsRoute(e)+"/page/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsPage",a,n))}},{key:"getPosts",value:function(e,t,s,a){c.a.get(this.getPostsRoute(e)+"/since/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPosts",s,a))}},{key:"getPostsBefore",value:function(e,t,s,a,n,i){c.a.get(this.getPostsRoute(e)+"/"+t+"/before/"+s+"/"+a).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsBefore",n,i))}},{key:"getPostsAfter",value:function(e,t,s,a,n,i){c.a.get(this.getPostsRoute(e)+"/"+t+"/after/"+s+"/"+a).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsAfter",n,i))}},{key:"getFlaggedPosts",value:function(e,t,s,a){c.a.get(this.getTeamNeededRoute()+"/posts/flagged/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFlaggedPosts",s,a))}},{key:"getFileInfo",value:function(e,t,s){c.a.get(this.getFilesRoute()+"/get_info"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFileInfo",t,s))}},{key:"getPublicLink",value:function(e,t,s){var a={filename:e};c.a.post(this.getFilesRoute()+"/get_public_link").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"getPublicLink",t,s))}},{key:"uploadFile",value:function(e,t,s,a,n,i){return c.a.post(this.getFilesRoute()+"/upload").set(this.defaultHeaders).attach("files",e,t).field("channel_id",s).field("client_ids",a).accept("application/json").end(this.handleResponse.bind(this,"uploadFile",n,i))}},{key:"registerOAuthApp",value:function(e,t,s){c.a.post(this.getOAuthRoute()+"/register").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"registerOAuthApp",t,s)),this.track("api","api_apps_register")}},{key:"allowOAuth2",value:function(e,t,s,a,n,i,o){c.a.get(this.getOAuthRoute()+"/allow").set(this.defaultHeaders).type("application/json").accept("application/json").query({response_type:e}).query({client_id:t}).query({redirect_uri:s}).query({scope:n}).query({state:a}).end(this.handleResponse.bind(this,"allowOAuth2",i,o))}},{key:"listOAuthApps",value:function(e,t){c.a.get(this.getOAuthRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getOAuthApps",e,t))}},{key:"deleteOAuthApp",value:function(e,t,s){c.a.post(this.getOAuthRoute()+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteOAuthApp",t,s))}},{key:"getOAuthAppInfo",value:function(e,t,s){c.a.get(this.getOAuthRoute()+"/app/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getOAuthAppInfo",t,s))}},{key:"getAuthorizedApps",value:function(e,t){c.a.get(this.getOAuthRoute()+"/authorized").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getAuthorizedApps",e,t))}},{key:"deauthorizeOAuthApp",value:function(e,t,s){c.a.post(this.getOAuthRoute()+"/"+e+"/deauthorize").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"deauthorizeOAuthApp",t,s))}},{key:"regenerateOAuthAppSecret",value:function(e,t,s){c.a.post(this.getOAuthRoute()+"/"+e+"/regen_secret").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"regenerateOAuthAppSecret",t,s))}},{key:"addIncomingHook",value:function(e,t,s){c.a.post(this.getHooksRoute()+"/incoming/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addIncomingHook",t,s)),this.track("api","api_integrations_created")}},{key:"deleteIncomingHook",value:function(e,t,s){c.a.post(this.getHooksRoute()+"/incoming/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteIncomingHook",t,s)),this.track("api","api_integrations_deleted")}},{key:"listIncomingHooks",value:function(e,t){c.a.get(this.getHooksRoute()+"/incoming/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listIncomingHooks",e,t))}},{key:"addOutgoingHook",value:function(e,t,s){c.a.post(this.getHooksRoute()+"/outgoing/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addOutgoingHook",t,s)),this.track("api","api_integrations_created")}},{key:"deleteOutgoingHook",value:function(e,t,s){c.a.post(this.getHooksRoute()+"/outgoing/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteOutgoingHook",t,s)),this.track("api","api_integrations_deleted")}},{key:"listOutgoingHooks",value:function(e,t){c.a.get(this.getHooksRoute()+"/outgoing/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listOutgoingHooks",e,t))}},{key:"regenOutgoingHookToken",value:function(e,t,s){c.a.post(this.getHooksRoute()+"/outgoing/regen_token").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"regenOutgoingHookToken",t,s))}},{key:"getAllPreferences",value:function(e,t){c.a.get(this.getBaseRoute()+"/preferences/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllPreferences",e,t))}},{key:"savePreferences",value:function(e,t,s){c.a.post(this.getBaseRoute()+"/preferences/save").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"savePreferences",t,s))}},{key:"getPreferenceCategory",value:function(e,t,s){c.a.get(this.getBaseRoute()+"/preferences/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPreferenceCategory",t,s))}},{key:"deletePreferences",value:function(e,t,s){c.a.post(this.getBaseRoute()+"/preferences/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"deletePreferences",t,s))}},{key:"listEmoji",value:function(e,t){c.a.get(this.getEmojiRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listEmoji",e,t))}},{key:"addEmoji",value:function(e,t,s,a){c.a.post(this.getEmojiRoute()+"/create").set(this.defaultHeaders).accept("application/json").attach("image",t,t.name).field("emoji",n.a.bind()(e)).end(this.handleResponse.bind(this,"addEmoji",s,a))}},{key:"deleteEmoji",value:function(e,t,s){c.a.post(this.getEmojiRoute()+"/delete").set(this.defaultHeaders).accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteEmoji",t,s))}},{key:"getCustomEmojiImageUrl",value:function(e){return this.getEmojiRoute()+"/"+e}},{key:"uploadCertificateFile",value:function(e,t,s){c.a.post(this.getAdminRoute()+"/add_certificate").set(this.defaultHeaders).accept("application/json").attach("certificate",e,e.name).end(this.handleResponse.bind(this,"uploadCertificateFile",t,s))}},{key:"removeCertificateFile",value:function(e,t,s){c.a.post(this.getAdminRoute()+"/remove_certificate").set(this.defaultHeaders).accept("application/json").send({filename:e}).end(this.handleResponse.bind(this,"removeCertificateFile",t,s))}},{key:"samlCertificateStatus",value:function(e,t){c.a.get(this.getAdminRoute()+"/saml_cert_status").set(this.defaultHeaders).type("application/json").accept("application/json").end(function(s,a){return s?t(s):e(a.body)})}}]),e}();t.a=y},function(e,t,s){"use strict";var a=s(0),n=a&&a.__esModule?function(){return a["default"]}:function(){return a};Object.defineProperty(n,"a",{get:n});var i=s(6),o=i&&i.__esModule?function(){return i["default"]}:function(){return i};Object.defineProperty(o,"a",{get:o});var p=s(1),l=p&&p.__esModule?function(){return p["default"]}:function(){return p};Object.defineProperty(l,"a",{get:l});var d=s(2),c=d&&d.__esModule?function(){return d["default"]}:function(){return d};Object.defineProperty(c,"a",{get:c});var u=7,h=3e3,r=3e5,g=function(){function e(){l.a.bind()(this,e),this.conn=null,this.sequence=1,this.connectFailCount=0,this.eventCallback=null,this.responseCallbacks={},this.reconnectCallback=null,this.errorCallback=null,this.closeCallback=null}return c.a.bind()(e,[{key:"initialize",value:function(e){var t=this;this.conn||(0===this.connectFailCount&&console.log("websocket connecting to "+e),this.conn=new WebSocket(e),this.conn.onopen=function(){t.reconnectCallback&&t.reconnectCallback(),t.connectFailCount>0&&console.log("websocket re-established connection"),t.connectFailCount=0},this.conn.onclose=function(){t.conn=null,t.sequence=1,0===t.connectFailCount&&console.log("websocket closed"),t.connectFailCount++,t.closeCallback&&t.closeCallback(t.connectFailCount);var s=h;t.connectFailCount>u&&(s=h*t.connectFailCount*t.connectFailCount,s>r&&(s=r)),setTimeout(function(){t.initialize(e)},s)},this.conn.onerror=function(e){t.connectFailCount<=1&&(console.log("websocket error"),console.log(e)),t.errorCallback&&t.errorCallback(e)},this.conn.onmessage=function(e){var s=JSON.parse(e.data);s.seq_reply?(s.error&&console.log(s),t.responseCallbacks[s.seq_reply]&&(t.responseCallbacks[s.seq_reply](s),o.a.bind()(t.responseCallbacks,s.seq_reply))):t.eventCallback&&t.eventCallback(s)})}},{key:"setEventCallback",value:function(e){this.eventCallback=e}},{key:"setReconnectCallback",value:function(e){this.reconnectCallback=e}},{key:"setErrorCallback",value:function(e){this.errorCallback=e}},{key:"setCloseCallback",value:function(e){this.closeCallback=e}},{key:"close",value:function(){this.connectFailCount=0,this.sequence=1,this.conn&&this.conn.readyState===WebSocket.OPEN&&(this.conn.onclose=function(){},this.conn.close(),this.conn=null,console.log("websocket closed"))}},{key:"sendMessage",value:function(e,t,s){var a={action:e,seq:this.sequence++,data:t};s&&(this.responseCallbacks[a.seq]=s),this.conn&&this.conn.readyState===WebSocket.OPEN?this.conn.send(n.a.bind()(a)):this.conn&&this.conn.readyState!==WebSocket.Closed||(this.conn=null,this.initialize())}},{key:"userTyping",value:function(e,t){var s={};s.channel_id=e,s.parent_id=t,this.sendMessage("user_typing",s)}},{key:"getStatuses",value:function(e){this.sendMessage("get_statuses",null,e)}}]),e}();t.a=g},function(e,t,s){"use strict";var a=s(3),n=s(4);e.exports.Client=a.a,e.exports.WebSocketClient=n.a},function(e,t){e.exports=require("babel-runtime/core-js/reflect/delete-property")},function(e,t){e.exports=require("superagent")}]);
//# sourceMappingURL=client.js.map